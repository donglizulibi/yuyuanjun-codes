现在出现一个新的需求，需要在点击用户选项的时候显示不同的导航栏
1 另建一个关于用户选项的导航栏组件，把这个组件引入到路由表中
2 在路由表中找到name是user的那一项，也就是点击导航栏用户选项会调转的那个路径
  把component改成components，有两个属性，default和navigationUser
  将用户列表组件UserList和新建导航栏组件
3 在App组件中将原来的导航栏Navigation去除，另外添加一个router-view组件
  将其name属性赋值为navigationUser，则在点击用户选项的时候会找到新导航栏组件显示出来
  而点击导航栏其他选项的时候，还是会显示原来的导航栏
  ??（空值合并运算符，只会过滤掉null和undefined，不会忽略空字符串）
4 而原来就存在的router-view的name属性就是default（不写也可以）
  在点击用户选项的时候，就会显示路由表中name=user的default的内容
  也就说用户列表组件UserList


做出一些结构上的优化和调整，构建嵌套路由
1 新建layout文件夹和Front、Member两个组件，把原来用户和文章相关的页面放在front显示
2 为了实现这一点，在路由表中把这些页面的路由改编为front页面的子路由
3 front页面也需要有一个router-view
4 front的子路由的路径如果不加上最左边的/，则可以继承front父级路由


一些样式上的修改
1 最开始在点击导航栏上的文章列表时，文章列表会高亮，然后点进去一篇文章
  在文章内容页右侧的导航栏的该文章标题会高亮，而导航栏的文章列表会失去高亮
  然后解决的办法是在script中引入useRoute和watch，实时监测当下的路由地址变化
  然后创建布尔变量，在导航栏各个的router-link中判断当下路由地址是否包含关键字
  如果包含则赋予其高亮样式，使得导航栏和文章详情页侧边列表都有高亮

  而现在的做法是直接在router-link中使用$route来判断是或包含关键字
  并赋予和侧边列表一样的高亮样式，而且这个高亮样式在全局定义，并在路由表中简化

2 碰到了全局样式无法使得文章详情也侧边列表选中项高亮的问题
  因为该组件的style标签使用了scoped


路由别名的设置
1 通过给某个页面设置路由别名，则可以实现既可以通过原来的路径来访问这个页面
  也可以通过别名来访问这个页面

2 设置路由别名的方法是在路由表中添加alias属性，然后在其中设置别名，可以是一个或多个

3 如果别名中包含参数传入的部分，则原来的别名会无效
