关于router-view的初始配置

1 创立router文件夹，建立路由表文件，引入createRouter函数和需要进入路由的页面
  定义history模式，配置路由表，并导出路由实例对象
  
2 与pinia一样，在main.js文件中，调用app实例的use方法，将路由实例对象填入
  
3 在App根组件中放入router-view标签，这个标签就可以根据路由地址来显示对应的页面
  router-view组件不用另外自定义


关于vue-router的hash模式和history模式
vue作为一种单页面应用，只在一开始以初始网址发送一次请求，返回所有页面的数据
然后根据地址栏后面的路径，在路由表中匹配到相应的页面
而hash模式和history模式的区别首先在于地址栏
hash模式用井号键作为锚点把路径和域名隔开，history模式并不会隔开
所以如果页面刷新，再次发送请求的时候，锚点后面的内容不会被包括在http请求中
但是history模式没有锚点，域名和路径一起发送到服务器，会出现找不到页面的情况
所以使用history模式的话，需要在服务器端修改配置，使服务器返回初始域名的数据即可
而hash模式除了出现锚点不美观之外，对搜索引擎检索的识别度也有影响

如果碰到有多个vue项目在服务器中运行的情况，可以在createWebHashHistory或者createWebHistory中
加入字符串参数，来表示路径的前缀


关于在路由表中添加name属性，以及把router-link的跳转方式转为name
如果后续需要修改路由的地址路径，则只需要在路由表中修改，而不需要批量修改router-link

建立mock数据文件，建立api文件来发送请求获取数据


