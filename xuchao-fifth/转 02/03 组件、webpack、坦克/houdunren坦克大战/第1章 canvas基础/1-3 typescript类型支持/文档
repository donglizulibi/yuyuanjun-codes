// protected drawModels(num: number) {
//   console.log(this.positionCollection(num));
//   for (let i = 0; i < num; i++) {

//     const position = this.positionCollection(num)[i];
//     //   const position = this.position();
//     this.canvas.drawImage(
//       image.get("straw")!,
//       position.x,
//       position.y,
//       config.model.width,
//       config.model.height
//     );
//   }
//   console.log(this.count)
// }

// // 另外建一个方法，删去随机坐标中的重复项
// protected positionCollection(num: number) {
//   // const collection = <{ x: number; y: number }[]>[];
//   const collection = [] as { x: number; y: number }[];

//   for (let i = 0; i < num; i++) {
//     while (true) {
//       const position = this.position();
//       const state = collection.some((item) => {
//         if (item.x == position.x && item.y == position.y) {
//           return true;
//         }
//       });

//       if (state) {
//         this.count++;
//       }
//       if (!state) {
//         collection.push(position);
//         break;
//       }
//     }
//   }

//   // console.log(count);
//   return collection;
// }
// protected position() {
//   return {
//     x:
//       Math.floor(Math.random() * (config.canvas.width / config.model.width)) *
//       config.model.width,
//     y:
//       Math.floor(
//         Math.random() * (config.canvas.height / config.model.height)
//       ) * config.model.height,
//   };
// }